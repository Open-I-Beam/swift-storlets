#---------------------------------------------------------------------------
# Copyright IBM Corp. 2015, 2015 All Rights Reserved
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# Limitations under the License.
#---------------------------------------------------------------------------

- name: Get the defaut tenant id from Keystone
  shell: keystone --os-endpoint={{ keystone_admin_url }} --os-token={{ keystone_admin_token }} tenant-list | grep {{ storlets_default_tenant_name }} | awk '{print $2}'
  register: keystone
  
- name: Enable the default tenant for storlets
  command: swift 
           --os-auth-url="{{ keystone_public_url }}" 
           --os-username="{{ storlets_default_tenant_user_name }}"
           --os-password="{{ storlets_default_tenant_user_password }}"
           --os-tenant-name="{{ storlets_default_tenant_name }}"
           post
           --meta "{{ storlets_enabled_attribute_name }}:true"

- name: Create Repository for building the image
  file:
    path: /data/registry/repositories/default_tenant_image
    state: directory
    mode: 0755
    owner: root

- name: Create default_tenant_image Docker file
  stat: path=/data/registry/repositories/default_tenant_image/Dockerfile
  register: st0

- template: 
    src: "default_tenant_image_Dockerfile"
    dest: "/data/registry/repositories/default_tenant_image/Dockerfile"
    owner: root
    mode: 0644
  when: not st0.stat.exists
  
- name: Build the image "{{ keystone.stdout_lines[0] }}"
  shell: docker images | grep "{{ inventory_hostname }}:{{ docker_registry_port }}/{{ keystone.stdout_lines[0] }}" | wc -l
  register: tenant_image

- command: "docker build -t {{ inventory_hostname }}:{{ docker_registry_port }}/{{ keystone.stdout_lines[0] }} ."
  args:
    chdir: "/data/registry/repositories/default_tenant_image"
  register: command_result
  failed_when: "'Successfully built' not in command_result.stdout"
  when: "'0' in tenant_image.stdout_lines[0]"  

- name: Push the default_tenant_image into the repository
  command: "docker push {{ inventory_hostname }}:{{ docker_registry_port }}/{{ keystone.stdout_lines[0] }}"
  
- name: Stop the running container
  command: docker stop -t 1 tenant_{{ keystone.stdout_lines[0] }}
  ignore_errors: yes
